version: 2 # use CircleCI 2.0

defaults: &defaults
  environment: &environment
    CIRCLE_TEST_REPORTS: /tmp/test-results
    CIRCLE_ARTIFACTS: /tmp/test-artifacts
    BUNDLE_JOBS: 4
    BUNDLE_RETRY: 3
    BUNDLE_PATH: ~/spree/vendor/bundle
  working_directory: ~/spree
  docker:
    - image: &ruby_image circleci/ruby:2.7-node-browsers

defaults_3_0: &defaults_3_0
  <<: *defaults
  docker:
    - image: &ruby_3_0_image circleci/ruby:3.0-node-browsers

run_tests: &run_tests
  <<: *defaults
  parallelism: 4
  steps:
    - checkout
    - restore_cache:
        keys:
          - spree-bundle-v7-{{ checksum ".ruby-version" }}-{{ .Branch }}
          - spree-bundle-v7-{{ checksum ".ruby-version" }}
    - run:
        name: Run rspec in parallel
        command: BUNDLE_GEMFILE=../Gemfile ./build-ci.rb test
    - store_artifacts:
        path: /tmp/test-artifacts
        destination: test-artifacts
    - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output
    - store_test_results:
        path: /tmp/test-results

run_tests_3_0: &run_tests_3_0
  <<: *defaults_3_0
  parallelism: 4
  steps:
    - checkout
    - restore_cache:
        keys:
          - spree-bundle-v7-ruby-3-0-{{ .Branch }}
          - spree-bundle-v7-ruby-3-0
    - run:
        name: Run rspec in parallel
        command: BUNDLE_GEMFILE=../Gemfile ./build-ci.rb test
    - store_artifacts:
        path: /tmp/test-artifacts
        destination: test-artifacts
    - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output
    - store_test_results:
        path: /tmp/test-results

jobs:
  bundle:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - spree-bundle-v7-{{ checksum ".ruby-version" }}-{{ .Branch }}
            - spree-bundle-v7-{{ checksum ".ruby-version" }}
      - run:
          name: Bundle Install
          command: |
            bundle check || bundle install
            ./build-ci.rb install
      - save_cache:
          key: spree-bundle-v7-{{ checksum ".ruby-version" }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/spree/vendor/bundle

  bundle_ruby_3_0:
    <<: *defaults_3_0
    steps:
      - checkout
      - restore_cache:
          keys:
            - spree-bundle-v7-ruby-3-0-{{ .Branch }}
            - spree-bundle-v7-ruby-3-0
      - run:
          name: Bundle Install
          command: |
            bundle check || bundle install
            ./build-ci.rb install
      - save_cache:
          key: spree-bundle-v7-ruby-3-0-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/spree/vendor/bundle

  tests_postgres: &tests_postgres
    <<: *run_tests
    environment: &postgres_environment
      <<: *environment
      DB: postgres
      DB_HOST: localhost
      DB_USERNAME: postgres
    docker:
      - image: *ruby_image
      - image: &postgres_image circleci/postgres:12-alpine
        environment:
          POSTGRES_USER: postgres

  tests_postgres_ruby_3_0: &tests_postgres_ruby_3_0
    <<: *run_tests_3_0
    environment:
      <<: *postgres_environment
    docker:
      - image: *ruby_3_0_image
      - image: *postgres_image

  tests_postgres_rails_6_0:
    <<: *tests_postgres
    environment:
      <<: *postgres_environment
      RAILS_VERSION: '~> 6.0.0'
    steps:
    - checkout
    - restore_cache:
        keys:
          - spree-bundle-v7-{{ checksum ".ruby-version" }}-{{ .Branch }}
          - spree-bundle-v7-{{ checksum ".ruby-version" }}
    - run:
        name: Ensure Bundle Install
        command: |
          bundle install
          ./build-ci.rb install
    - run:
        name: Run rspec in parallel
        command: BUNDLE_GEMFILE=../Gemfile ./build-ci.rb test
    - store_artifacts:
        path: /tmp/test-artifacts
        destination: test-artifacts
    - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output
    - store_test_results:
        path: /tmp/test-results

  tests_mysql: &tests_mysql
    <<: *run_tests
    environment: &mysql_environment
      <<: *environment
      DB: mysql
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
      COVERAGE: true
      COVERAGE_DIR: /tmp/workspace/simplecov
    docker:
      - image: *ruby_image
      - image: &mysql_image circleci/mysql:8-ram

  tests_mysql_ruby_3_0:
    <<: *run_tests_3_0
    environment:
      <<: *mysql_environment
    docker:
      - image: *ruby_3_0_image
      - image: *mysql_image
        command: [--default-authentication-plugin=mysql_native_password]
    steps:
      - checkout
      - restore_cache:
          keys:
            - spree-bundle-v7-ruby-3-0-{{ .Branch }}
            - spree-bundle-v7-ruby-3-0
      - run:
          name: Run rspec in parallel
          command: BUNDLE_GEMFILE=../Gemfile ./build-ci.rb test
      - store_artifacts:
          path: /tmp/test-artifacts
          destination: test-artifacts
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - simplecov

  send_test_coverage:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - run:
          name: Setup ENVs
          command: |
            export GIT_BRANCH="$CIRCLE_BRANCH"
            export GIT_COMMIT_SHA="$CIRCLE_SHA1"
            export GIT_COMMITTED_AT="$(date +%s)"
      - run:
          name: Format test coverage
          command: |
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.api.json /tmp/workspace/simplecov/api/.resultset.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.backend.json /tmp/workspace/simplecov/backend/.resultset.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.core.json /tmp/workspace/simplecov/core/.resultset.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.frontend.json /tmp/workspace/simplecov/frontend/.resultset.json
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 4 -o tmp/codeclimate.total.json
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json

  update_staging_repository:
    docker:
      - image: circleci/ruby:2.7.2
    steps:
      - add_ssh_keys:
          fingerprints:
            - 54:50:5e:4e:80:6d:2e:26:43:c6:99:bd:39:b2:71:dc
      - run: mkdir -p ~/.ssh
      - run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run: ssh-add -D
      - run: ssh-add ~/.ssh/id_rsa_54505e4e806d2e2643c699bd39b271dc
      - run: git clone -b master git@github.com:spark-solutions/spree-designs.git
      - run:
          command: bundle update spree
          working_directory: ~/project/spree-designs
      - run:
          command: bundle exec rails spree:install:migrations
          working_directory: ~/project/spree-designs
      - run:
          command: |
            git config user.name 'AutoDeploy'
            git config user.email 'autodeploy@sparksolutions.co'
          working_directory: ~/project/spree-designs
      - run:
          command: |
            git add -A
            git commit -m "Auto-commit v#${CIRCLE_BUILD_NUM}"
          working_directory: ~/project/spree-designs
      - run:
          command: git push -f origin master
          working_directory: ~/project/spree-designs

workflows:
  version: 2
  main:
    jobs:
      - bundle
      - bundle_ruby_3_0
      - tests_postgres:
          requires:
            - bundle
      - tests_postgres_ruby_3_0:
          requires:
            - bundle_ruby_3_0
      - tests_postgres_rails_6_0:
          requires:
            - bundle
      - tests_mysql_ruby_3_0:
          requires:
            - bundle_ruby_3_0
      - send_test_coverage:
          requires:
            - tests_mysql_ruby_3_0
  update_staging_repository:
    jobs:
      - update_staging_repository:
          filters:
            branches:
              only:
                - master
